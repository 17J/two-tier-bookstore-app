trigger:
- main

pool:
  name: Runner

stages:
  - stage: BuildAndArchive
    displayName: 'Build and Archive Webapp'
    jobs:
      - job: BuildAndArchiveJob
        displayName: 'Build and Archive Backend'
        steps:
          - task: Maven@4
            displayName: 'Maven Build and Install'
            inputs:
              azureSubscription: 'Azure subscription 1(1)(a77db116-2dc8-4845-bc9e-5c69f3417a2d)'
              mavenPomFile: 'bookStore/pom.xml'
              goals: 'clean install -DskipTests=true'
              publishJUnitResults: false
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false

          # Add a task to copy the built WAR/JAR file to the artifact staging directory
          # Maven usually puts the build artifact in target/
          - task: CopyFiles@2
            displayName: 'Copy Build Artifact to Staging'
            inputs:
              Contents: 'bookStore/target/*.war' # Adjust if it's a .jar or other extension
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
              flattenFolders: true # Optional: Copies only the file, not the target/ folder structure

          - task: ArchiveFiles@2
            displayName: 'Archive Webapp Files'
            inputs:
              # Root folder should be the staging directory where the WAR/JAR was copied
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
              includeRootFolder: false # Set to true if you want the staging folder itself in the zip
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          # IMPORTANT: Publish the artifact so it's available to subsequent stages
          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop # Name of the artifact, 'drop' is common
            displayName: 'Publish Webapp Artifact'

  - stage: DeployWebapp
    displayName: 'Deploy Webapp'
    jobs:
      - job: DeployJob
        displayName: 'Push to Webapp'
        steps:
          # IMPORTANT: Download the artifact published in the previous stage
          - download: current # 'current' refers to artifacts from the current pipeline run
            artifact: drop # The name of the artifact you published
            displayName: 'Download Webapp Artifact'

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: 'Azure subscription 1(a77db116-2dc8-4845-bc9e-5c69f3417a2d)'
              appType: 'webAppLinux'
              appName: 'webappss'
              # The package is now downloaded to $(Pipeline.Workspace)/drop/
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'